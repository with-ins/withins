dependencies {
    implementation("org.springframework:spring-context")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    runtimeOnly("mysql:mysql-connector-java:${project.property('mysqlVersion')}")

    implementation("com.querydsl:querydsl-jpa:${project.property('querydslVersion')}:jakarta")
    annotationProcessor("com.querydsl:querydsl-apt:${project.property('querydslVersion')}:jakarta")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")

    testFixturesImplementation("org.springframework.boot:spring-boot-starter-data-jpa")
    testFixturesImplementation("org.testcontainers:testcontainers:${project.property('testContainerVersion')}")
    testFixturesImplementation("org.testcontainers:junit-jupiter:${project.property('testContainerVersion')}")
    testFixturesImplementation("org.testcontainers:mysql:${project.property('testContainerMySqlVersion')}")
}

def querydslDir = "$buildDir/generated/sources/annotationProcessor/java/main"
clean {
    delete(file(querydslDir))
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)
}
sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}